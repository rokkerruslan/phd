name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: build in docker
        run: docker build -t phd .

      - name: login to dockerhub
        run: docker login -u ${{ secrets.dockerHubLogin }} -p ${{ secrets.dockerHubPassword }}

      - name: add tag
        run: docker tag phd:latest rokkerdenis/phd:latest

      - name: push to dockerhub
        run: docker push rokkerdenis/phd

  tests:
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      web:
        image: rokkerdenis/phd
        env:
          ADDR: ":3001"
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable
          GLOBAL_SALT: asadfaksdfakjshdfkahsfkjahsdflkahdflashdfalh
          MIN_LEN_FOR_NEW_PASSWORD: 1
          TOKEN_TTL: 900h
        ports:
          - 3001:3001
    steps:
    - uses: actions/checkout@v2
    - name: migrations
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable
      run: ./bin/mi up
    - name: Logsss
      run: docker logs "${{ job.services.web.id }}"

    - name: asdfasdf
      run: |
        sleep 2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements.txt
    - name: Test with pytest
      run: |
        pytest
