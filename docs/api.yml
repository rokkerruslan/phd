openapi: 3.0.0
info:
  version: '0.0.1'
  title: 'Photographer'
  contact:
    email: 'Denis.Rokker@gmail.com'
tags:
  - name: "Accounts"
    description: all about accounts
  - name: "Events"
    description: all about events
  - name: "Offers"
    description: all about offers
paths:
  /accounts/sign-up:
    post:
      tags:
        - "Accounts"
      description: registration
      requestBody:
        description: Initial registration data
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Email
                - Password
                - Name
              properties:
                Email:
                  type: string
                Password:
                  type: string
                Name:
                  type: string
      responses:
        200:
          description: Sucsessful registration
          content:
            application/json:
              schema:
                type: object
                required:
                  - Token
                  - AccountID
                properties:
                  Token:
                    type: string
                  AccountID:
                    type: integer
        400:
          description: Error. `Email or password` is empty
          content:
            application/json:
              schema:
                type: object
                required:
                  - Error
                properties:
                  Error:
                    type: string
  /accounts/sign-in:
    post:
      tags:
        - "Accounts"
      description: Enter
      requestBody:
        description: Input data entry
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Email
                - Password
              properties:
                Email:
                  type: string
                Password:
                  type: string
      responses:
        200:
          description: successful login
          content:
            application/json:
              schema:
                type: object
                required:
                  - Token
                  - AccountID
                properties:
                  Token:
                    type: string
                  AccountID:
                    type: integer
        400:
          description: Error. Account does not exist
          content:
            application/json:
              schema:
                type: object
                required:
                  - Error
                properties:
                  Error:
                    type: string
  /accounts/sign-out:
    delete:
      tags:
        - "Accounts"
      description: exit
      parameters:
        - in: header
          name: X-Auth-Token
          schema:
            type: string
          required: true
      responses:
        204:
          description: |
            Complete logout
  /accounts/{id}:
    get:
      tags:
        - "Accounts"
      description: getting user information
      parameters:
        - $ref: '#/components/parameters/ID'
        - $ref: '#/components/parameters/X-Auth-Token'
      responses:
        200:
          description: providing user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    delete:
      tags:
        - "Accounts"
      description: delete account
      parameters:
        - $ref: '#/components/parameters/ID'
        - $ref: '#/components/parameters/X-Auth-Token'
      responses:
        204:
          description: deleting an account and all information about it
  /events:
    post:
      tags:
        - "Events"
      description: create new events
      requestBody:
        description: event structure filling
        required: true
        content:
          aplication/json:
            schema:
              type: object
              required:
                - Name
                - Description
                - OwnerID
                - Timelines
              properties:
                Name:
                  type: string
                Description:
                  type: string
                OwnerID:
                  type: integer
                Timelines:
                  type: array
                  items:
                    type: object
      responses:
        200:
          description: completion of the event
  /events/{id}:
    put:
      tags:
        - "Events"
      description: update information for ivents
      parameters:
        - $ref: '#/components/parameters/ID'
      requestBody:
        description: event structure update
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - Timelines
                - Description
              properties:
                Name:
                  type: string
                Description:
                  type: string
                Timelines:
                  type: array
                  items:
                    type: object
      responses:
        204:
          description: event update completion
  /offers:
    post:
      tags:
        - "Offers"
      description: create offer
      parameters:
        - $ref: '#/components/parameters/X-Auth-Token'
      requestBody:
        description: account id and event id
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AccountID
                - EventID
              properties:
                AccountID:
                  type: integer
                EventID:
                  type: integer
      responses:
        200:
          description: offer data
          content:
            application/json:
              schema:
                type: object
                required:
                  - ID
                  - AccountID
                  - EventID
                  - Created
                  - Updated
                properties:
                  ID:
                    type: integer
                  AccountID:
                    type: integer
                  EventID:
                    type: integer
                  Created:
                    type: string
                    format: date-time
                  Update:
                    type: string
                    format: date-time
  /offers/{id}:
    put:
      tags:
        - "Offers"
      description: offer data update
      parameters:
        - $ref: '#/components/parameters/X-Auth-Token'
        - $ref: '#/components/parameters/ID'
      requestBody:
        description: event approval
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - IsApproved
              properties:
                IsApproved:
                  type: integer
                  nullable: true
      responses:
        200:
          description: updated offer data
          content:
            application/json:
              schema:
                type: object
                required:
                  - ID
                  - AccountID
                  - EventID
                  - IsApproved
                  - Created
                  - Update
                properties:
                  ID:
                    type: integer
                  AccountID:
                    type: integer
                  EventID:
                    type: integer
                  IsApproved:
                    type: integer
                    nullable: true
                  Created:
                    type: string
                    format: date-time
                  Update:
                    type: string
                    format: date-time
    delete:
      tags:
        - "Offers"
      description: delete offer
      parameters:
        - $ref: '#/components/parameters/X-Auth-Token'
        - $ref: '#/components/parameters/ID'
      responses:
        200:
          description: delete offer
components:
  parameters:
    ID:
      in: path
      name: id
      description: Object unique key
      required: true
      schema:
        type: integer
    X-Auth-Token:
      in: header
      name: X-Auth-Token
      description: Authentication Token
      schema:
        type: string
      required: true
      example: "njxa7uLl3AYSkseDY61KlYJ+FJ0TrRqhVJOhaj4BYHQ="
  schemas:
    Account:
      type: object
      required:
        - ID
        - Name
        - Email
      properties:
        ID:
          type: integer
        Name:
          type: string
        Email:
          type: string
      example:
        ID: 1
        Name: "Rokker Ruslan"
        Email: "rokkerruslan@protonmail.com"