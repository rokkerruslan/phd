openapi: 3.0.0
info:
  version: '0.0.1'
  title: 'Photographer'
  contact:
    email: 'Denis.Rokker@gmail.com'
tags:
  - name: Accounts
    description: "All about accounts"
  - name: Events
    description: "All about events"
  - name: Offers
    description: "All about offers"
  - name: Images
    description: "All about images"
paths:
  /accounts/sign-up:
    post:
      tags:
        - Accounts
      description: "Registration"
      requestBody:
        description: "Initial registration data"
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Email
                - Password
                - Name
              properties:
                Email:
                  type: string
                Password:
                  type: string
                Name:
                  type: string
      responses:
        200:
          description: "Sucsessful registration"
          content:
            application/json:
              schema:
                type: object
                required:
                  - Token
                  - Account
                properties:
                  Token:
                    type: string
                  AccountID:
                    type: object
                    properties:
                      ID:
                        type: integer
                      Name:
                        type: string
                      Email:
                        type: string
                      Created:
                        type: string
                        format: date-time
                      Updeated:
                        type: string
                        format: date-time
        400:
          description: "Error. `Email or password` is empty"
          content:
            application/json:
              schema:
                type: object
                required:
                  - Error
                properties:
                  Error:
                    type: string
  /accounts/sign-in:
    post:
      tags:
        - Accounts
      description: "Enter"
      requestBody:
        description: "Input data entry"
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Email
                - Password
              properties:
                Email:
                  type: string
                Password:
                  type: string
      responses:
        200:
          description: "Successful login"
          content:
            application/json:
              schema:
                type: object
                required:
                  - Token
                  - AccountID
                properties:
                  Token:
                    type: string
                  AccountID:
                    type: integer
        400:
          description: "Error. Account does not exist"
          content:
            application/json:
              schema:
                type: object
                required:
                  - Error
                properties:
                  Error:
                    type: string
  /accounts/sign-out:
    delete:
      tags:
        - Accounts
      description: "Exit"
      parameters:
        - in: header
          name: X-Auth-Token
          schema:
            type: string
          required: true
      responses:
        204:
          description: "Complete logout"
  /accounts/{id}:
    get:
      tags:
        - Accounts
      description: "Etting user information"
      parameters:
        - $ref: '#/components/parameters/ID'
        - $ref: '#/components/parameters/X-Auth-Token'
      responses:
        200:
          description: "Providing user information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    delete:
      tags:
        - Accounts
      description: "Delete account"
      parameters:
        - $ref: '#/components/parameters/ID'
        - $ref: '#/components/parameters/X-Auth-Token'
      responses:
        204:
          description: "Deleting an account and all its tokens"
        400:
          description: "Error. Account does not exist"
          content:
            application/json:
              schema:
                type: object
                required:
                  - Error
                properties:
                  Error:
                    type: string
  /events:
    post:
      tags:
        - Events
      description: "Create new events"
      requestBody:
        description: "Event structure filling"
        required: true
        content:
          aplication/json:
            schema:
              type: object
              required:
                - Name
                - Description
                - OwnerID
                - Timelines
              properties:
                Name:
                  type: string
                Description:
                  type: string
                OwnerID:
                  type: integer
                Timelines:
                  type: array
                  items:
                    type: object
      responses:
        200:
          description: "Completion of the event"
  /events/{id}:
    put:
      tags:
        - Events
      description: "Update information for ivents"
      parameters:
        - $ref: '#/components/parameters/ID'
      requestBody:
        description: "Event structure update"
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - Timelines
                - Description
              properties:
                Name:
                  type: string
                Description:
                  type: string
                Timelines:
                  type: array
                  items:
                    type: object
      responses:
        204:
          description: "Event update completion"
  /offers:
    post:
      tags:
        - Offers
      description: "Create offer"
      parameters:
        - $ref: '#/components/parameters/X-Auth-Token'
      requestBody:
        description: "Account id and event id"
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AccountID
                - EventID
              properties:
                AccountID:
                  type: integer
                EventID:
                  type: integer
      responses:
        200:
          description: offer data
          content:
            application/json:
              schema:
                type: object
                required:
                  - ID
                  - AccountID
                  - EventID
                  - Created
                  - Updated
                properties:
                  ID:
                    type: integer
                  AccountID:
                    type: integer
                  EventID:
                    type: integer
                  Created:
                    type: string
                    format: date-time
                  Update:
                    type: string
                    format: date-time
  /offers/{id}:
    put:
      tags:
        - Offers
      description: "Offer data update"
      parameters:
        - $ref: '#/components/parameters/X-Auth-Token'
        - $ref: '#/components/parameters/ID'
      requestBody:
        description: "Event approval"
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - IsApproved
              properties:
                IsApproved:
                  type: integer
                  nullable: true
      responses:
        200:
          description: "Updated offer data"
          content:
            application/json:
              schema:
                type: object
                required:
                  - ID
                  - AccountID
                  - EventID
                  - IsApproved
                  - Created
                  - Update
                properties:
                  ID:
                    type: integer
                  AccountID:
                    type: integer
                  EventID:
                    type: integer
                  IsApproved:
                    type: integer
                    nullable: true
                  Created:
                    type: string
                    format: date-time
                  Update:
                    type: string
                    format: date-time
    delete:
      tags:
        - Offers
      description: "Delete offer"
      parameters:
        - $ref: '#/components/parameters/X-Auth-Token'
        - $ref: '#/components/parameters/ID'
      responses:
        200:
          description: "Delete offer"
  /files:
    post:
      tags:
        - Images
      description: "Upload images"
      requestBody:
        description: "Image information"
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - EventID
                - AuthorID
                - Title
                - Data
              properties:
                EventID:
                  type: integer
                AuthorID:
                  type: integer
                Title:
                  type: string
                Data:
                  type: string
      responses:
        202:
          description: image upload completion
    get:
      tags:
        - Images
      description: "Obtaining image metadata"
      parameters:
        - $ref: '#/components/parameters/AuthorID'
        - $ref: '#/components/parameters/EventID'
      responses:
        200:
          description: "Image metadata"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - EventID
                    - AuthorID
                    - Title
                    - Hash
                    - Created
                  properties:
                    EventID:
                      type: integer
                    AuthorID:
                      type: integer
                    Title:
                      type: string
                    Hash:
                      type: string
                    Created:
                      type: string
                      format: date-time
components:
  parameters:
    ID:
      in: path
      name: id
      description: "Object unique key"
      required: true
      schema:
        type: integer
    AuthorID:
      in: query
      name: author_id
      required: true
      schema:
        type: integer
    EventID:
      in: query
      name: event_id
      required: true
      schema:
        type: integer
    X-Auth-Token:
      in: header
      name: X-Auth-Token
      description: "Authentication Token"
      schema:
        type: string
      required: true
      example: "njxa7uLl3AYSkseDY61KlYJ+FJ0TrRqhVJOhaj4BYHQ="
  schemas:
    Account:
      type: object
      required:
        - ID
        - Name
        - Email
        - Created
        - Updated
      properties:
        ID:
          type: integer
        Name:
          type: string
        Email:
          type: string
        Created:
          type: string
          format: date-time
        Updated:
          type: string
          format: date-time
      example:
        ID: 1
        Name: "Rokker Ruslan"
        Email: "rokkerruslan@protonmail.com"
